Base de datos: comercio.
13. Mostrar el código de ticket, fecha y nombre del cliente sin que se pierda ningún ticket,
aunque su cliente sea NULL.


 Select  t.codigo,t.fecha,c.nombre from ticket t left join cliente c on t.cliente=c.codigo;

SELECT ticket.codigo, ticket.fecha, cliente.nombre FROM ticket LEFT JOIN cliente ON ticket.cliente = cliente.codigo;

14. Mostrar el nombre y dirección de los clientes junto con el nombre de su municipio sin
perder aquellos municipios que no tienen clientes.

select c.nombre,c.direccion,m.nombre municipio
 from cliente c righ join  municipio m on c.municipio=m.codigo;

select c.nombre,c.direccion,m.nombre 
from cliente c right join municipio m on c.municipio=m.codigo

SELECT cliente.nombre, cliente.direccion, municipio.nombre FROM cliente RIGHT JOIN municipio ON cliente.municipio = municipio.codigo;




15. Escribe una consulta que devuelva el código de ticket, línea, código y descripción del
artículo para todas las líneas del ticket 108, aunque el código de artículo sea nulo.


select l.ticket,l.nlinea,a.codigo,a.descripcion
from linea_ticket l left join articulo a on l.articulo=a.codigo where l.ticket=108;

SELECT lt.ticket, lt.nlinea, lt.articulo, a.descripcion
FROM linea_ticket lt 
LEFT JOIN articulo a ON lt.articulo = a.codigo
WHERE lt.ticket = 108;


16. Si has resuelto la sentencia anterior con RIGHT JOIN, resuélvela con LEFT JOIN. Si la
has resuelto con LEFT JOIN, resuélvela con RIGHT JOIN.
select l.ticket,l.nlinea,l.articulo,a.descripcion
from linea_ticket l   left join articulo a on l.articulo=a.codigo where ticket=108 ;




17. Mostrar el nombre de cada municipio y el número de clientes residiendo en cada uno de
ellos. Los municipios que no tienen ningún cliente no aparecerán.

select   m.nombre ,count(*)
from cliente c join municipio m on c.municipio=m.codigo group by c.municipio;





18. Mostrar el nombre de cada municipio y el número de clientes residiendo en cada uno de
ellos. Los municipios que no tienen ningún cliente también aparecerán.

elect   m.nombre ,count(*)
from cliente c  right join municipio m on c.municipio=m.codigo group by c.municipio;


19. Escribe una consulta que devuelva el código y fecha de cada ticket junto al nombre del
vendedor que realizó la venta y el nombre del cliente destinatario del ticket. No se debe
perder ningún ticket aunque no tenga código de vendedor o código de cliente.

select t.codigo CodigoTicket,t.fecha FechaTicket,v.nombre NombreVendedor,c.nombre NombreCliente
from ticket t left join vendedor v on t.vendedor=v.codigo left join cliente c on t.cliente=c.codigo;



20. Obtén el nombre de los clientes y el número de tickets en los que aparece cada uno.
También se mostrará el nombre de los clientes que no aparecen en ningún ticket.




21. Escribe una sentencia que muestre el código y nombre de cada vendedor y el total de
ventas (importe total de sus tickets ignorando posibles descuentos e impuestos).

select v.codigo,v.nombre,sum(l.cant*a.precio)
from vendedor v inner join ticket t on v.codigo=t.vendedor inner join linea_ticket l on t.codigo=l.ticket
inner join articulo a on l.articulo=a.codigo
group by v.codigo;


22. Escribe una sentencia que muestre el nombre de la provincia y la cantidad total de artículos
vendidos a clientes que residen en dicha provincia.

select p.nombre,sum(l.cant)
from linea_ticket l join ticket t on l.ticket=t.codigo
join cliente c on t.cliente=c.codigo
join municipio m on c.municipio=m.codigo
join provincia p on m.provincia=p.codigo 
group by p.codigo;



23. Escribe una consulta que muestre el código y nombre de aquellos clientes de la provincia
de Castellón (con código de provincia ‘CA’) que en total han gastado más de 100 euros
(ignora descuentos e impuestos).

select c.nombre
from linea_ticket l join ticket t on l.ticket=t.codigo
join cliente c on t.cliente=c.codigo
join municipio m on c.municipio=m.codigo
join provincia p on m.provincia=p.codigo 
where p.codigo='CA'
group by c.codigo having sum(l.cant*l.precio)>100;


24. Escribe una consulta que obtenga el nombre de cada vendedor y el de su jefe.